import { MigrationInterface, QueryRunner } from "typeorm";

export class AutoGeneratedMigration1750073010447 implements MigrationInterface {
    name = 'AutoGeneratedMigration1750073010447'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`interview\` DROP FOREIGN KEY \`FK_582a2d3001799ddc27c8ac84793\``);
        await queryRunner.query(`ALTER TABLE \`payment\` DROP FOREIGN KEY \`FK_b046318e0b341a7f72110b75857\``);
        await queryRunner.query(`ALTER TABLE \`interview\` DROP COLUMN \`feedback\``);
        await queryRunner.query(`ALTER TABLE \`interview\` DROP COLUMN \`status\``);
        await queryRunner.query(`ALTER TABLE \`interview\` DROP COLUMN \`transcript\``);
        await queryRunner.query(`ALTER TABLE \`interview\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`payment\` ADD \`paymentMethod\` varchar(255) NULL`);
        await queryRunner.query(`ALTER TABLE \`payment\` ADD \`receiptUrl\` varchar(255) NULL`);
        await queryRunner.query(`ALTER TABLE \`payment\` ADD \`metadata\` json NULL`);
        await queryRunner.query(`ALTER TABLE \`payment\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`user\` ADD \`profilePicture\` varchar(255) NULL`);
        await queryRunner.query(`ALTER TABLE \`user\` ADD \`phone\` varchar(255) NULL`);
        await queryRunner.query(`ALTER TABLE \`user\` ADD \`isActive\` tinyint NOT NULL DEFAULT 1`);
        await queryRunner.query(`ALTER TABLE \`interview\` DROP COLUMN \`userId\``);
        await queryRunner.query(`ALTER TABLE \`interview\` ADD \`userId\` varchar(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`payment\` DROP COLUMN \`userId\``);
        await queryRunner.query(`ALTER TABLE \`payment\` ADD \`userId\` varchar(255) NOT NULL`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`payment\` DROP COLUMN \`userId\``);
        await queryRunner.query(`ALTER TABLE \`payment\` ADD \`userId\` varchar(36) NULL`);
        await queryRunner.query(`ALTER TABLE \`interview\` DROP COLUMN \`userId\``);
        await queryRunner.query(`ALTER TABLE \`interview\` ADD \`userId\` varchar(36) NULL`);
        await queryRunner.query(`ALTER TABLE \`user\` DROP COLUMN \`isActive\``);
        await queryRunner.query(`ALTER TABLE \`user\` DROP COLUMN \`phone\``);
        await queryRunner.query(`ALTER TABLE \`user\` DROP COLUMN \`profilePicture\``);
        await queryRunner.query(`ALTER TABLE \`payment\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`payment\` DROP COLUMN \`metadata\``);
        await queryRunner.query(`ALTER TABLE \`payment\` DROP COLUMN \`receiptUrl\``);
        await queryRunner.query(`ALTER TABLE \`payment\` DROP COLUMN \`paymentMethod\``);
        await queryRunner.query(`ALTER TABLE \`interview\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`interview\` ADD \`transcript\` text NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`interview\` ADD \`status\` varchar(255) NOT NULL DEFAULT 'pending'`);
        await queryRunner.query(`ALTER TABLE \`interview\` ADD \`feedback\` text NULL`);
        await queryRunner.query(`ALTER TABLE \`payment\` ADD CONSTRAINT \`FK_b046318e0b341a7f72110b75857\` FOREIGN KEY (\`userId\`) REFERENCES \`user\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`interview\` ADD CONSTRAINT \`FK_582a2d3001799ddc27c8ac84793\` FOREIGN KEY (\`userId\`) REFERENCES \`user\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

}
